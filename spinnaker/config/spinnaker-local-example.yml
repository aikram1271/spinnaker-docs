# This file is intended to override the default configuration in the
# spinnaker.yml file while providing guidance on the mostly likely
# configuration parameters to be changed.
#
# In order for Spinnaker to discover it, it must be copied to a file named
# "spinnaker-local.yml" and placed in /opt/spinnaker/config
# (or when running from source code, in the $HOME/.spinnaker directory.)
#
# A better practice could be to create the spinnaker-local.yml file by
# hand with only the particular attributes that you want to override
# and use the spinnaker.yml file as your guide since it is spinnaker.yml
# that we are overriding here in the first place.

global:
  spinnaker:
    timezone: 'America/Los_Angeles'

oraclebmcs:
  enabled: true
  accounts:
    - name: example
      compartmentId: 'XXX'
      userId: 'XXX'
      fingerprint: 'XXX'
      sshPrivateKeyFilePath: '/home/spinnaker/.oraclebmc/bmcs_api_key.pem'
      tenancyId: 'XXX'
      region: 'us-phoenix-1'
  primaryAccount: example

providers:
  aws:
    enabled: ${SPINNAKER_AWS_ENABLED:false}
  azure:
    enabled: ${SPINNAKER_AZURE_ENABLED:false}
  google:
    enabled: ${SPINNAKER_GOOGLE_ENABLED:false}

  cf:
    enabled: false
  kubernetes:
    enabled: ${SPINNAKER_KUBERNETES_ENABLED:false}
  
  dockerRegistry:
    # For more information on configuring Docker registries, see
    # http://www.spinnaker.io/v1.0/docs/target-deployment-configuration#section-docker-registry

    # NOTE: Enabling dockerRegistry is independent of other providers.
    # However, for convienience, we tie docker and kubernetes together
    # since kubernetes (and only kubernetes) depends on this docker provider
    # configuration.
    enabled: ${SPINNAKER_KUBERNETES_ENABLED:false}

    primaryCredentials:
      name: my-docker-registry
      address: ${SPINNAKER_DOCKER_REGISTRY:https://index.docker.io/}
      repository: ${SPINNAKER_DOCKER_REPOSITORY:}
      username: ${SPINNAKER_DOCKER_USERNAME:}
      # A path to a plain text file containing the user's password
      passwordFile: ${SPINNAKER_DOCKER_PASSWORD_FILE:}

services:
  default:
    # These defaults can be modified to change all the spinnaker subsystems
    # (clouddriver, gate, etc) at once, but not external systems (jenkins, etc).
    # Individual systems can still be overridden using their own section entry
    # directly under 'services'.
    protocol: http    # Assume all spinnaker subsystems are using http
    host: localhost   # Assume all spinnaker subsystems are on localhost

  redis:
    # If you are using a remote redis server, you can set the host here.
    # If the remote server is on a different port or url, you can add
    # a "port" or "baseUrl" field here instead.
    host: localhost

  cassandra:
    # If you are using a remote cassandra server, you can set the host here.
    # If the remote server is on a different port or url, you can add
    # a "port" or "baseUrl" field here instead. You may also need to set
    # the cluster name. See the main spinnaker.yml file for more attributes.
    host: localhost

  docker:
    # This target repository is used by the bakery to publish baked docker images.
    # Do not include http://.
    targetRepository: # Optional, but expected in spinnaker-local.yml if specified.

  jenkins:
    # If you are integrating Jenkins, set its location here using the baseUrl
    # field and provide the username/password credentials.
    # You must also enable the "igor" service listed separately.
    #
    # If you have multiple jenkins servers, you will need to list
    # them in an igor-local.yml. See jenkins.masters in config/igor.yml.
    #
    # Note that jenkins is not installed with Spinnaker so you must obtain this
    # on your own if you are interested.
    enabled: ${services.igor.enabled:false}
    defaultMaster:
      name: Jenkins # The display name for this server
      baseUrl:
      username:
      password:

  travis:
    # If you are integrating Travis, set its location here using the baseUrl
    # and adress fields and provide the githubToken for authentication.
    # You must also enable the "igor" service listed separately.
    #
    # If you have multiple travis servers, you will need to list
    # them in an igor-local.yml. See travis.masters in config/igor.yml.
    #
    # Note that travis is not installed with Spinnaker so you must obtain this
    # on your own if you are interested.
    enabled: false
    defaultMaster:
      name: ci # The display name for this server. Gets prefixed with "travis-"
      baseUrl: https://travis-ci.com
      address: https://api.travis-ci.org
      githubToken: # GitHub scopes currently required by Travis is required.

  spectator:
    webEndpoint:
      enabled: true

  stackdriver:
    enabled: false

  clouddriver:
    aws:
      udf:
        # Controls whether UserDataProviders are used to populate user data of
        # new server groups. If false, user data is copied over from ancestor
        # server groups on both CopyLastAsgAtomicOperation and
        # ModifyAsgLaunchConfigurationOperation (only if no user data is
        # provided on the given request).
        enabled: true

  igor:
    # If you are integrating Jenkins then you must also enable Spinnaker's
    # "igor" subsystem.
    enabled: false

  deck:
    # Frontend configuration.
    # If you are proxying Spinnaker behind a single host, you may want to
    # override these values. Remember to run `reconfigure_spinnaker.sh` after.
    #baseUrl: http://spinnaker.mydomain.com
    #gateUrl: ${services.deck.baseUrl}/gate
    #bakeryUrl: ${services.deck.baseUrl}/rosco
    auth:
      enabled: false

  rosco:
    # You need to provide the fully-qualified path to the directory containing
    # the packer templates.
    # They typically live in rosco's config/packer directory.
    configDir: /opt/rosco/config/packer

  fiat:
    enabled: false

  chaos:
    enabled: false

  front50:
    cassandra:
      enabled: false
    redis:
      enabled: true
    storage_bucket: ${SPINNAKER_DEFAULT_STORAGE_BUCKET:}
    gcs:
      enabled: false
    s3:
      enabled: false
    azs:
      enabled: false
      storageAccountName:
      storageAccountKey:
      storageContainerName: front50

  echo:
    # Persistence mechanism to use
    cassandra:
      enabled: false
    inMemory:
      enabled: true

    cron:
      # Allow pipeline triggers to run periodically via cron expressions.
      enabled: true

    notifications:
      # The following blocks can enable Spinnaker to send notifications
      # using the corresponding mechanism.
      # See http://www.spinnaker.io/docs/notifications-and-events-guide
      # for more information.
      mail:
        enabled: false
        host: # the smtp host
        fromAddress: #the address for which emails are sent from
      hipchat:
        enabled: false
        url: # the hipchat server to connect to
        token: #the hipchat auth token
        botName: # the username of the bot
      sms:
        enabled: false
        account: # twilio account id
        token: # twilio auth token
        from: # phone number by which sms messages are sent
      slack:
        # See https://api.slack.com/bot-users for details about using bots
        # and how to create your own bot user.
        enabled: false
        token: # the API token for the bot
        botName: # the username of the bot
